version: 2.1

executors:
  node_executor:
    docker:
      - image: cimg/node:18.17

jobs:
  build-and-deploy:
    executor: node_executor
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: npm ci
      - run:
          name: Build React app
          command: npm run build
      - run:
          name: Install non-interactive OCI CLI
          command: |
            export OCI_CLI_INSTALL_DIR="$HOME/lib/oracle-cli"
            export PATH="$OCI_CLI_INSTALL_DIR/bin:$PATH"
            bash -c "$(curl -L https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh)" -- --accept-all-defaults
            echo 'export PATH=$PATH:$HOME/bin' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Set up OCI config and secure it
          command: |
            # create config directory
            mkdir -p ~/.oci

            # write the static part of config
            cat > ~/.oci/config <<-EOF
            [DEFAULT]
            user=${OCI_USER_OCID}
            fingerprint=${OCI_FINGERPRINT}
            tenancy=${OCI_TENANCY_OCID}
            region=${OCI_REGION}
            key_file=/home/circleci/.oci/oci_api_key.pem
            EOF

            # decode and write the private key
            echo "${OCI_API_PRIVATE_KEY}" | base64 -d > ~/.oci/oci_api_key.pem
            chmod 600 ~/.oci/config ~/.oci/oci_api_key.pem

            # extract public key (one-liner) and append to config
            PUB_KEY=$(openssl rsa -in ~/.oci/oci_api_key.pem -pubout 2>/dev/null \
              | sed '1d;$d' \
              | tr -d '\n')
            if [ -z "$PUB_KEY" ]; then
              echo "ERROR: Failed to extract public key from OCI_API_PRIVATE_KEY" >&2
              exit 1
            fi
            echo "OCI_API_KEY=\"${PUB_KEY}\"" >> ~/.oci/config

            # debug: dump the final config so you can verify OCI_API_KEY is present
            echo "----- ~/.oci/config -----"
            sed -n '1,10p' ~/.oci/config
            tail -n +11 ~/.oci/config | sed -n '1p'
            echo "-------------------------"

            # fix permissions
            oci setup repair-file-permissions --file ~/.oci/config

            # now run your upload
            node scripts/oci-upload.js
            oci os object bulk-upload \
              --bucket-name "${OCI_BUCKET_NAME}" \
              --src-path dist


workflows:
  build_and_deploy_workflow:
    jobs:
      - build-and-deploy