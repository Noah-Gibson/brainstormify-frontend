version: 2.1

executors:
  node_executor:
    docker:
      - image: cimg/node:18.17

jobs:
  build-and-deploy:
    executor: node_executor
    steps:
      - checkout

      - run:
          name: Install dependencies
          command: npm ci

      - run:
          name: Build React app
          command: npm run build

      - run:
          name: Install python3-pip
          command: |
            sudo apt-get update -y
            sudo apt-get install -y python3-pip

      - run:
          name: Install OCI CLI (v3.51.7+)
          command: |
            pip3 install --user --upgrade oci-cli==3.51.7
            export PATH="$HOME/.local/bin:$PATH"
            oci --version

      - run:
          name: Set up OCI config and upload
          command: |
            # Write minimal OCI config
            mkdir -p ~/.oci
            printf "%s\n" \
              "[DEFAULT]" \
              "user=${OCI_USER_OCID}" \
              "fingerprint=${OCI_FINGERPRINT}" \
              "tenancy=${OCI_TENANCY_OCID}" \
              "region=${OCI_REGION}" \
              "key_file=/home/circleci/.oci/oci_api_key.pem" \
              "namespace=${OCI_NAMESPACE}" \
            > ~/.oci/config

            # Decode private key and append bare label
            echo "${OCI_API_PRIVATE_KEY}" | base64 -d > ~/.oci/oci_api_key.pem
            echo OCI_API_KEY >> ~/.oci/oci_api_key.pem
            chmod 600 ~/.oci/config ~/.oci/oci_api_key.pem

            # Extract public key and append unquoted to config
            PUB_KEY=$(openssl rsa -in ~/.oci/oci_api_key.pem -pubout \
                      | sed '1d;$d' \
                      | tr -d '\n')
            [ -n "$PUB_KEY" ] || { echo "Failed to extract public key"; exit 1; }
            echo OCI_API_KEY=${PUB_KEY} >> ~/.oci/config

            # Repair permissions
            oci setup repair-file-permissions --file ~/.oci/config

            # Verify signing with a debug list call
            oci os object list \
              --bucket-name "$OCI_BUCKET_NAME" \
              --namespace  "$OCI_NAMESPACE" \
              --limit 1 \
              --debug

            # Bulk-upload built assets
            oci os object bulk-upload \
              --bucket-name "${OCI_BUCKET_NAME}" \
              --src-path dist

workflows:
  build_and_deploy_workflow:
    jobs:
      - build-and-deploy
